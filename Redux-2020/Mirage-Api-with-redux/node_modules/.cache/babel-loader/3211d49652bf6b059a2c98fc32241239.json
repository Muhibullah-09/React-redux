{"ast":null,"code":"import RouteRecognizer from 'route-recognizer';\nimport FakeXMLHttpRequest from 'fake-xml-http-request';\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob: 'FileReader' in self && 'Blob' in self && function () {\n    try {\n      new Blob();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n};\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj);\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n  var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n    return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n  };\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name);\n  }\n\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name');\n  }\n\n  return name.toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value);\n  }\n\n  return value;\n} // Build a destructive iterator for the value list\n\n\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function () {\n      var value = items.shift();\n      return {\n        done: value === undefined,\n        value: value\n      };\n    }\n  };\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\n\nfunction Headers(headers) {\n  this.map = {};\n\n  if (headers instanceof Headers) {\n    headers.forEach(function (value, name) {\n      this.append(name, value);\n    }, this);\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function (header) {\n      this.append(header[0], header[1]);\n    }, this);\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function (name) {\n      this.append(name, headers[name]);\n    }, this);\n  }\n}\n\nHeaders.prototype.append = function (name, value) {\n  name = normalizeName(name);\n  value = normalizeValue(value);\n  var oldValue = this.map[name];\n  this.map[name] = oldValue ? oldValue + ', ' + value : value;\n};\n\nHeaders.prototype['delete'] = function (name) {\n  delete this.map[normalizeName(name)];\n};\n\nHeaders.prototype.get = function (name) {\n  name = normalizeName(name);\n  return this.has(name) ? this.map[name] : null;\n};\n\nHeaders.prototype.has = function (name) {\n  return this.map.hasOwnProperty(normalizeName(name));\n};\n\nHeaders.prototype.set = function (name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value);\n};\n\nHeaders.prototype.forEach = function (callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this);\n    }\n  }\n};\n\nHeaders.prototype.keys = function () {\n  var items = [];\n  this.forEach(function (value, name) {\n    items.push(name);\n  });\n  return iteratorFor(items);\n};\n\nHeaders.prototype.values = function () {\n  var items = [];\n  this.forEach(function (value) {\n    items.push(value);\n  });\n  return iteratorFor(items);\n};\n\nHeaders.prototype.entries = function () {\n  var items = [];\n  this.forEach(function (value, name) {\n    items.push([name, value]);\n  });\n  return iteratorFor(items);\n};\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'));\n  }\n\n  body.bodyUsed = true;\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function (resolve, reject) {\n    reader.onload = function () {\n      resolve(reader.result);\n    };\n\n    reader.onerror = function () {\n      reject(reader.error);\n    };\n  });\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsArrayBuffer(blob);\n  return promise;\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsText(blob);\n  return promise;\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf);\n  var chars = new Array(view.length);\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i]);\n  }\n\n  return chars.join('');\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0);\n  } else {\n    var view = new Uint8Array(buf.byteLength);\n    view.set(new Uint8Array(buf));\n    return view.buffer;\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false;\n\n  this._initBody = function (body) {\n    this._bodyInit = body;\n\n    if (!body) {\n      this._bodyText = '';\n    } else if (typeof body === 'string') {\n      this._bodyText = body;\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body;\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body;\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString();\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n      this._bodyInit = new Blob([this._bodyArrayBuffer]);\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body);\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body);\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8');\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type);\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n      }\n    }\n  };\n\n  if (support.blob) {\n    this.blob = function () {\n      var rejected = consumed(this);\n\n      if (rejected) {\n        return rejected;\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob');\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]));\n      }\n    };\n\n    this.arrayBuffer = function () {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer);\n      }\n    };\n  }\n\n  this.text = function () {\n    var rejected = consumed(this);\n\n    if (rejected) {\n      return rejected;\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob);\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text');\n    } else {\n      return Promise.resolve(this._bodyText);\n    }\n  };\n\n  if (support.formData) {\n    this.formData = function () {\n      return this.text().then(decode);\n    };\n  }\n\n  this.json = function () {\n    return this.text().then(JSON.parse);\n  };\n\n  return this;\n} // HTTP methods whose capitalization should be normalized\n\n\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase();\n  return methods.indexOf(upcased) > -1 ? upcased : method;\n}\n\nfunction Request(input, options) {\n  options = options || {};\n  var body = options.body;\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read');\n    }\n\n    this.url = input.url;\n    this.credentials = input.credentials;\n\n    if (!options.headers) {\n      this.headers = new Headers(input.headers);\n    }\n\n    this.method = input.method;\n    this.mode = input.mode;\n    this.signal = input.signal;\n\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit;\n      input.bodyUsed = true;\n    }\n  } else {\n    this.url = String(input);\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin';\n\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers);\n  }\n\n  this.method = normalizeMethod(options.method || this.method || 'GET');\n  this.mode = options.mode || this.mode || null;\n  this.signal = options.signal || this.signal;\n  this.referrer = null;\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests');\n  }\n\n  this._initBody(body);\n}\n\nRequest.prototype.clone = function () {\n  return new Request(this, {\n    body: this._bodyInit\n  });\n};\n\nfunction decode(body) {\n  var form = new FormData();\n  body.trim().split('&').forEach(function (bytes) {\n    if (bytes) {\n      var split = bytes.split('=');\n      var name = split.shift().replace(/\\+/g, ' ');\n      var value = split.join('=').replace(/\\+/g, ' ');\n      form.append(decodeURIComponent(name), decodeURIComponent(value));\n    }\n  });\n  return form;\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n    var parts = line.split(':');\n    var key = parts.shift().trim();\n\n    if (key) {\n      var value = parts.join(':').trim();\n      headers.append(key, value);\n    }\n  });\n  return headers;\n}\n\nBody.call(Request.prototype);\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {};\n  }\n\n  this.type = 'default';\n  this.status = options.status === undefined ? 200 : options.status;\n  this.ok = this.status >= 200 && this.status < 300;\n  this.statusText = 'statusText' in options ? options.statusText : 'OK';\n  this.headers = new Headers(options.headers);\n  this.url = options.url || '';\n\n  this._initBody(bodyInit);\n}\n\nBody.call(Response.prototype);\n\nResponse.prototype.clone = function () {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  });\n};\n\nResponse.error = function () {\n  var response = new Response(null, {\n    status: 0,\n    statusText: ''\n  });\n  response.type = 'error';\n  return response;\n};\n\nvar redirectStatuses = [301, 302, 303, 307, 308];\n\nResponse.redirect = function (url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code');\n  }\n\n  return new Response(null, {\n    status: status,\n    headers: {\n      location: url\n    }\n  });\n};\n\nvar DOMException = self.DOMException;\n\ntry {\n  new DOMException();\n} catch (err) {\n  DOMException = function (message, name) {\n    this.message = message;\n    this.name = name;\n    var error = Error(message);\n    this.stack = error.stack;\n  };\n\n  DOMException.prototype = Object.create(Error.prototype);\n  DOMException.prototype.constructor = DOMException;\n}\n\nfunction fetch(input, init) {\n  return new Promise(function (resolve, reject) {\n    var request = new Request(input, init);\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'));\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    function abortXhr() {\n      xhr.abort();\n    }\n\n    xhr.onload = function () {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      };\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n      var body = 'response' in xhr ? xhr.response : xhr.responseText;\n      resolve(new Response(body, options));\n    };\n\n    xhr.onerror = function () {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.ontimeout = function () {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.onabort = function () {\n      reject(new DOMException('Aborted', 'AbortError'));\n    };\n\n    xhr.open(request.method, request.url, true);\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true;\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false;\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob';\n    }\n\n    request.headers.forEach(function (value, name) {\n      xhr.setRequestHeader(name, value);\n    });\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr);\n\n      xhr.onreadystatechange = function () {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr);\n        }\n      };\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n  });\n}\n\nfetch.polyfill = true;\n\nif (!self.fetch) {\n  self.fetch = fetch;\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n}\n\nvar FakeFetch = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Headers: Headers,\n  Request: Request,\n  Response: Response,\n\n  get DOMException() {\n    return DOMException;\n  },\n\n  fetch: fetch\n});\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\n\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n      return port !== 80;\n\n    case 'https':\n    case 'wss':\n      return port !== 443;\n\n    case 'ftp':\n      return port !== 21;\n\n    case 'gopher':\n      return port !== 70;\n\n    case 'file':\n      return false;\n  }\n\n  return port !== 0;\n};\n\nvar has = Object.prototype.hasOwnProperty,\n    undef;\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\n\nfunction decode$1(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\n\n\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g,\n      result = {},\n      part;\n\n  while (part = parser.exec(query)) {\n    var key = decode$1(part[1]),\n        value = decode$1(part[2]); //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\n\n\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n  var pairs = [],\n      value,\n      key; //\n  // Optionally prefix with a '?' if needed\n  //\n\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key]; //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value); //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n\n      if (key === null || value === null) continue;\n      pairs.push(key + '=' + value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n} //\n// Expose the module.\n//\n\n\nvar stringify = querystringify;\nvar parse = querystring;\nvar querystringify_1 = {\n  stringify: stringify,\n  parse: parse\n};\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//,\n    protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i,\n    whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]',\n    left = new RegExp('^' + whitespace + '+');\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\n\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\n\n\nvar rules = [['#', 'hash'], // Extract from the back.\n['?', 'query'], // Extract from the back.\nfunction sanitize(address) {\n  // Sanitize what is left of the address\n  return address.replace('\\\\', '/');\n}, ['/', 'pathname'], // Extract from the back.\n['@', 'auth', 1], // Extract from the front.\n[NaN, 'host', undefined, 1, 1], // Set left over value.\n[/:(\\d+)$/, 'port', undefined, 1], // RegExp the back.\n[NaN, 'hostname', undefined, 1, 1] // Set left over.\n];\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\n\nvar ignore = {\n  hash: 1,\n  query: 1\n};\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\n\nfunction lolcation(loc) {\n  var globalVar;\n  if (typeof window !== 'undefined') globalVar = window;else if (typeof commonjsGlobal !== 'undefined') globalVar = commonjsGlobal;else if (typeof self !== 'undefined') globalVar = self;else globalVar = {};\n  var location = globalVar.location || {};\n  loc = loc || location;\n  var finaldestination = {},\n      type = typeof loc,\n      key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\n\n\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\n\n\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\n      i = path.length,\n      last = path[i - 1],\n      unshift = false,\n      up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n  return path.join('/');\n}\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\n\n\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative,\n      extracted,\n      parse,\n      instruction,\n      index,\n      key,\n      instructions = rules.slice(),\n      type = typeof location,\n      url = this,\n      i = 0; //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = querystringify_1.parse;\n  location = lolcation(location); //\n  // Extract protocol information before running the instructions.\n  //\n\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest; //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : ''); //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  } //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n\n\n  if (parser) url.query = parser(url.query); //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n\n  if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  } //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n\n\n  if (!requiresPort(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  } //\n  // Parse down the `auth` for the username and password.\n  //\n\n\n  url.username = url.password = '';\n\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null'; //\n  // The href is just the compiled result.\n  //\n\n  url.href = url.toString();\n}\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\n\n\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || querystringify_1.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!requiresPort(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname + ':' + value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n      if (url.port) value += ':' + url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\n  url.href = url.toString();\n  return url;\n}\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\n\n\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = querystringify_1.stringify;\n  var query,\n      url = this,\n      protocol = url.protocol;\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':' + url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?' + query : query;\n  if (url.hash) result += url.hash;\n  return result;\n}\n\nUrl.prototype = {\n  set: set,\n  toString: toString\n}; //\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\n\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = querystringify_1;\nvar urlParse = Url;\n/**\n * parseURL - decompose a URL into its parts\n * @param  {String} url a URL\n * @return {Object} parts of the URL, including the following\n *\n * 'https://www.yahoo.com:1234/mypage?test=yes#abc'\n *\n * {\n *   host: 'www.yahoo.com:1234',\n *   protocol: 'https:',\n *   search: '?test=yes',\n *   hash: '#abc',\n *   href: 'https://www.yahoo.com:1234/mypage?test=yes#abc',\n *   pathname: '/mypage',\n *   fullpath: '/mypage?test=yes'\n * }\n */\n\nfunction parseURL(url) {\n  var parsedUrl = new urlParse(url);\n\n  if (!parsedUrl.host) {\n    // eslint-disable-next-line no-self-assign\n    parsedUrl.href = parsedUrl.href; // IE: load the host and protocol\n  }\n\n  var pathname = parsedUrl.pathname;\n\n  if (pathname.charAt(0) !== '/') {\n    pathname = '/' + pathname; // IE: prepend leading slash\n  }\n\n  var host = parsedUrl.host;\n\n  if (parsedUrl.port === '80' || parsedUrl.port === '443') {\n    host = parsedUrl.hostname; // IE: remove default port\n  }\n\n  return {\n    host: host,\n    protocol: parsedUrl.protocol,\n    search: parsedUrl.query,\n    hash: parsedUrl.hash,\n    href: parsedUrl.href,\n    pathname: pathname,\n    fullpath: pathname + (parsedUrl.query || '') + (parsedUrl.hash || '')\n  };\n}\n/**\n * Registry\n *\n * A registry is a map of HTTP verbs to route recognizers.\n */\n\n\nvar Registry =\n/** @class */\nfunction () {\n  function Registry()\n  /* host */\n  {\n    // Herein we keep track of RouteRecognizer instances\n    // keyed by HTTP method. Feel free to add more as needed.\n    this.verbs = {\n      GET: new RouteRecognizer(),\n      PUT: new RouteRecognizer(),\n      POST: new RouteRecognizer(),\n      DELETE: new RouteRecognizer(),\n      PATCH: new RouteRecognizer(),\n      HEAD: new RouteRecognizer(),\n      OPTIONS: new RouteRecognizer()\n    };\n  }\n\n  return Registry;\n}();\n/**\n * Hosts\n *\n * a map of hosts to Registries, ultimately allowing\n * a per-host-and-port, per HTTP verb lookup of RouteRecognizers\n */\n\n\nvar Hosts =\n/** @class */\nfunction () {\n  function Hosts() {\n    this.registries = {};\n  }\n  /**\n   * Hosts#forURL - retrieve a map of HTTP verbs to RouteRecognizers\n   *                for a given URL\n   *\n   * @param  {String} url a URL\n   * @return {Registry}   a map of HTTP verbs to RouteRecognizers\n   *                      corresponding to the provided URL's\n   *                      hostname and port\n   */\n\n\n  Hosts.prototype.forURL = function (url) {\n    var host = parseURL(url).host;\n    var registry = this.registries[host];\n\n    if (registry === undefined) {\n      registry = this.registries[host] = new Registry();\n    }\n\n    return registry.verbs;\n  };\n\n  return Hosts;\n}();\n\nfunction createPassthrough(fakeXHR, nativeXMLHttpRequest) {\n  // event types to handle on the xhr\n  var evts = ['error', 'timeout', 'abort', 'readystatechange']; // event types to handle on the xhr.upload\n\n  var uploadEvents = []; // properties to copy from the native xhr to fake xhr\n\n  var lifecycleProps = ['readyState', 'responseText', 'response', 'responseXML', 'responseURL', 'status', 'statusText'];\n  var xhr = fakeXHR._passthroughRequest = new nativeXMLHttpRequest();\n  xhr.open(fakeXHR.method, fakeXHR.url, fakeXHR.async, fakeXHR.username, fakeXHR.password);\n\n  if (fakeXHR.responseType === 'arraybuffer') {\n    lifecycleProps = ['readyState', 'response', 'status', 'statusText'];\n    xhr.responseType = fakeXHR.responseType;\n  } // use onload if the browser supports it\n\n\n  if ('onload' in xhr) {\n    evts.push('load');\n  } // add progress event for async calls\n  // avoid using progress events for sync calls, they will hang https://bugs.webkit.org/show_bug.cgi?id=40996.\n\n\n  if (fakeXHR.async && fakeXHR.responseType !== 'arraybuffer') {\n    evts.push('progress');\n    uploadEvents.push('progress');\n  } // update `propertyNames` properties from `fromXHR` to `toXHR`\n\n\n  function copyLifecycleProperties(propertyNames, fromXHR, toXHR) {\n    for (var i = 0; i < propertyNames.length; i++) {\n      var prop = propertyNames[i];\n\n      if (prop in fromXHR) {\n        toXHR[prop] = fromXHR[prop];\n      }\n    }\n  } // fire fake event on `eventable`\n\n\n  function dispatchEvent(eventable, eventType, event) {\n    eventable.dispatchEvent(event);\n\n    if (eventable['on' + eventType]) {\n      eventable['on' + eventType](event);\n    }\n  } // set the on- handler on the native xhr for the given eventType\n\n\n  function createHandler(eventType) {\n    xhr['on' + eventType] = function (event) {\n      copyLifecycleProperties(lifecycleProps, xhr, fakeXHR);\n      dispatchEvent(fakeXHR, eventType, event);\n    };\n  } // set the on- handler on the native xhr's `upload` property for\n  // the given eventType\n\n\n  function createUploadHandler(eventType) {\n    if (xhr.upload && fakeXHR.upload && fakeXHR.upload['on' + eventType]) {\n      xhr.upload['on' + eventType] = function (event) {\n        dispatchEvent(fakeXHR.upload, eventType, event);\n      };\n    }\n  }\n\n  var i;\n\n  for (i = 0; i < evts.length; i++) {\n    createHandler(evts[i]);\n  }\n\n  for (i = 0; i < uploadEvents.length; i++) {\n    createUploadHandler(uploadEvents[i]);\n  }\n\n  if (fakeXHR.async) {\n    xhr.timeout = fakeXHR.timeout;\n    xhr.withCredentials = fakeXHR.withCredentials;\n  }\n\n  for (var h in fakeXHR.requestHeaders) {\n    xhr.setRequestHeader(h, fakeXHR.requestHeaders[h]);\n  }\n\n  return xhr;\n}\n\nfunction interceptor(ctx) {\n  function FakeRequest() {\n    // super()\n    FakeXMLHttpRequest.call(this);\n  }\n\n  FakeRequest.prototype = Object.create(FakeXMLHttpRequest.prototype);\n  FakeRequest.prototype.constructor = FakeRequest; // extend\n\n  FakeRequest.prototype.send = function send() {\n    this.sendArguments = arguments;\n\n    if (!ctx.pretender.running) {\n      throw new Error('You shut down a Pretender instance while there was a pending request. ' + 'That request just tried to complete. Check to see if you accidentally shut down ' + 'a pretender earlier than you intended to');\n    }\n\n    FakeXMLHttpRequest.prototype.send.apply(this, arguments);\n\n    if (ctx.pretender.checkPassthrough(this)) {\n      this.passthrough();\n    } else {\n      ctx.pretender.handleRequest(this);\n    }\n  };\n\n  FakeRequest.prototype.passthrough = function passthrough() {\n    if (!this.sendArguments) {\n      throw new Error('You attempted to passthrough a FakeRequest that was never sent. ' + 'Call `.send()` on the original request first');\n    }\n\n    var xhr = createPassthrough(this, ctx.pretender._nativeXMLHttpRequest);\n    xhr.send.apply(xhr, this.sendArguments);\n    return xhr;\n  };\n\n  FakeRequest.prototype._passthroughCheck = function (method, args) {\n    if (this._passthroughRequest) {\n      return this._passthroughRequest[method].apply(this._passthroughRequest, args);\n    }\n\n    return FakeXMLHttpRequest.prototype[method].apply(this, args);\n  };\n\n  FakeRequest.prototype.abort = function abort() {\n    return this._passthroughCheck('abort', arguments);\n  };\n\n  FakeRequest.prototype.getResponseHeader = function getResponseHeader() {\n    return this._passthroughCheck('getResponseHeader', arguments);\n  };\n\n  FakeRequest.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n    return this._passthroughCheck('getAllResponseHeaders', arguments);\n  };\n\n  if (ctx.pretender._nativeXMLHttpRequest.prototype._passthroughCheck) {\n    // eslint-disable-next-line no-console\n    console.warn('You created a second Pretender instance while there was already one running. ' + 'Running two Pretender servers at once will lead to unexpected results and will ' + 'be removed entirely in a future major version.' + 'Please call .shutdown() on your instances when you no longer need them to respond.');\n  }\n\n  return FakeRequest;\n}\n\nfunction Pretender()\n/* routeMap1, routeMap2, ..., options*/\n{\n  this.hosts = new Hosts();\n  var lastArg = arguments[arguments.length - 1];\n  var options = typeof lastArg === 'object' ? lastArg : null;\n  var shouldNotTrack = options && options.trackRequests === false;\n  var noopArray = {\n    push: function () {},\n    length: 0\n  };\n  this.handlers = [];\n  this.handledRequests = shouldNotTrack ? noopArray : [];\n  this.passthroughRequests = shouldNotTrack ? noopArray : [];\n  this.unhandledRequests = shouldNotTrack ? noopArray : [];\n  this.requestReferences = [];\n  this.forcePassthrough = options && options.forcePassthrough === true;\n  this.disableUnhandled = options && options.disableUnhandled === true; // reference the native XMLHttpRequest object so\n  // it can be restored later\n\n  this._nativeXMLHttpRequest = self.XMLHttpRequest;\n  this.running = false;\n  var ctx = {\n    pretender: this\n  };\n  this.ctx = ctx; // capture xhr requests, channeling them into\n  // the route map.\n\n  self.XMLHttpRequest = interceptor(ctx); // polyfill fetch when xhr is ready\n\n  this._fetchProps = FakeFetch ? ['fetch', 'Headers', 'Request', 'Response'] : [];\n\n  this._fetchProps.forEach(function (name) {\n    this['_native' + name] = self[name];\n    self[name] = FakeFetch[name];\n  }, this); // 'start' the server\n\n\n  this.running = true; // trigger the route map DSL.\n\n  var argLength = options ? arguments.length - 1 : arguments.length;\n\n  for (var i = 0; i < argLength; i++) {\n    this.map(arguments[i]);\n  }\n}\n\nfunction verbify(verb) {\n  return function (path, handler, async) {\n    return this.register(verb, path, handler, async);\n  };\n}\n\nfunction scheduleProgressEvent(request, startTime, totalTime) {\n  setTimeout(function () {\n    if (!request.aborted && !request.status) {\n      var elapsedTime = new Date().getTime() - startTime.getTime();\n      var progressTotal = void 0;\n      var body = request.requestBody;\n\n      if (!body) {\n        progressTotal = 0;\n      } else {\n        // Support Blob, BufferSource, USVString, ArrayBufferView\n        progressTotal = body.byteLength || body.size || body.length || 0;\n      }\n\n      var progressTransmitted = totalTime <= 0 ? 0 : elapsedTime / totalTime * progressTotal; // ProgressEvent expects loaded, total\n      // https://xhr.spec.whatwg.org/#interface-progressevent\n\n      request.upload._progress(true, progressTransmitted, progressTotal);\n\n      request._progress(true, progressTransmitted, progressTotal);\n\n      scheduleProgressEvent(request, startTime, totalTime);\n    }\n  }, 50);\n}\n\nfunction isArray(array) {\n  return Object.prototype.toString.call(array) === '[object Array]';\n}\n\nvar PASSTHROUGH = {};\nPretender.prototype = {\n  get: verbify('GET'),\n  post: verbify('POST'),\n  put: verbify('PUT'),\n  'delete': verbify('DELETE'),\n  patch: verbify('PATCH'),\n  head: verbify('HEAD'),\n  options: verbify('OPTIONS'),\n  map: function (maps) {\n    maps.call(this);\n  },\n  register: function register(verb, url, handler, async) {\n    if (!handler) {\n      throw new Error('The function you tried passing to Pretender to handle ' + verb + ' ' + url + ' is undefined or missing.');\n    }\n\n    handler.numberOfCalls = 0;\n    handler.async = async;\n    this.handlers.push(handler);\n    var registry = this.hosts.forURL(url)[verb];\n    registry.add([{\n      path: parseURL(url).fullpath,\n      handler: handler\n    }]);\n    return handler;\n  },\n  passthrough: PASSTHROUGH,\n  checkPassthrough: function checkPassthrough(request) {\n    var verb = request.method.toUpperCase();\n    var path = parseURL(request.url).fullpath;\n    var recognized = this.hosts.forURL(request.url)[verb].recognize(path);\n    var match = recognized && recognized[0];\n\n    if (match && match.handler === PASSTHROUGH || this.forcePassthrough) {\n      this.passthroughRequests.push(request);\n      this.passthroughRequest(verb, path, request);\n      return true;\n    }\n\n    return false;\n  },\n  handleRequest: function handleRequest(request) {\n    var verb = request.method.toUpperCase();\n    var path = request.url;\n\n    var handler = this._handlerFor(verb, path, request);\n\n    if (handler) {\n      handler.handler.numberOfCalls++;\n      var async_1 = handler.handler.async;\n      this.handledRequests.push(request);\n      var pretender_1 = this;\n\n      var _handleRequest_1 = function (statusHeadersAndBody) {\n        if (!isArray(statusHeadersAndBody)) {\n          var note = 'Remember to `return [status, headers, body];` in your route handler.';\n          throw new Error('Nothing returned by handler for ' + path + '. ' + note);\n        }\n\n        var status = statusHeadersAndBody[0];\n        var headers = pretender_1.prepareHeaders(statusHeadersAndBody[1]);\n        var body = pretender_1.prepareBody(statusHeadersAndBody[2], headers);\n        pretender_1.handleResponse(request, async_1, function () {\n          request.respond(status, headers, body);\n          pretender_1.handledRequest(verb, path, request);\n        });\n      };\n\n      try {\n        var result = handler.handler(request);\n\n        if (result && typeof result.then === 'function') {\n          // `result` is a promise, resolve it\n          result.then(function (resolvedResult) {\n            _handleRequest_1(resolvedResult);\n          });\n        } else {\n          _handleRequest_1(result);\n        }\n      } catch (error) {\n        this.erroredRequest(verb, path, request, error);\n        this.resolve(request);\n      }\n    } else {\n      if (!this.disableUnhandled) {\n        this.unhandledRequests.push(request);\n        this.unhandledRequest(verb, path, request);\n      }\n    }\n  },\n  handleResponse: function handleResponse(request, strategy, callback) {\n    var delay = typeof strategy === 'function' ? strategy() : strategy;\n    delay = typeof delay === 'boolean' || typeof delay === 'number' ? delay : 0;\n\n    if (delay === false) {\n      callback();\n    } else {\n      var pretender_2 = this;\n      pretender_2.requestReferences.push({\n        request: request,\n        callback: callback\n      });\n\n      if (delay !== true) {\n        scheduleProgressEvent(request, new Date(), delay);\n        setTimeout(function () {\n          pretender_2.resolve(request);\n        }, delay);\n      }\n    }\n  },\n  resolve: function resolve(request) {\n    for (var i = 0, len = this.requestReferences.length; i < len; i++) {\n      var res = this.requestReferences[i];\n\n      if (res.request === request) {\n        res.callback();\n        this.requestReferences.splice(i, 1);\n        break;\n      }\n    }\n  },\n  requiresManualResolution: function (verb, path) {\n    var handler = this._handlerFor(verb.toUpperCase(), path, {});\n\n    if (!handler) {\n      return false;\n    }\n\n    var async = handler.handler.async;\n    return typeof async === 'function' ? async() === true : async === true;\n  },\n  prepareBody: function (body) {\n    return body;\n  },\n  prepareHeaders: function (headers) {\n    return headers;\n  },\n  handledRequest: function ()\n  /* verb, path, request */\n  {},\n  passthroughRequest: function ()\n  /* verb, path, request */\n  {},\n  unhandledRequest: function (verb, path\n  /*, request */\n  ) {\n    throw new Error('Pretender intercepted ' + verb + ' ' + path + ' but no handler was defined for this type of request');\n  },\n  erroredRequest: function (verb, path, request, error) {\n    error.message = 'Pretender intercepted ' + verb + ' ' + path + ' but encountered an error: ' + error.message;\n    throw error;\n  },\n  _handlerFor: function (verb, url, request) {\n    var registry = this.hosts.forURL(url)[verb];\n    var matches = registry.recognize(parseURL(url).fullpath);\n    var match = matches ? matches[0] : null;\n\n    if (match) {\n      request.params = match.params;\n      request.queryParams = matches.queryParams;\n    }\n\n    return match;\n  },\n  shutdown: function shutdown() {\n    self.XMLHttpRequest = this._nativeXMLHttpRequest;\n\n    this._fetchProps.forEach(function (name) {\n      self[name] = this['_native' + name];\n    }, this);\n\n    this.ctx.pretender = undefined; // 'stop' the server\n\n    this.running = false;\n  }\n};\nPretender.parseURL = parseURL;\nPretender.Hosts = Hosts;\nPretender.Registry = Registry;\nexport default Pretender;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-redux/Redux-2020/Mirage-Api-with-redux/node_modules/pretender/dist/pretender.es.js"],"names":["RouteRecognizer","FakeXMLHttpRequest","support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","isDataView","obj","DataView","prototype","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","type","rejected","Error","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","signal","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","FakeFetch","freeze","__proto__","commonjsGlobal","globalThis","window","global","requiresPort","required","port","protocol","undef","decode$1","querystring","query","parser","part","exec","querystringify","prefix","pairs","isNaN","encodeURIComponent","stringify","querystringify_1","slashes","protocolre","whitespace","left","RegExp","trimLeft","str","rules","sanitize","address","NaN","ignore","hash","lolcation","loc","globalVar","finaldestination","Url","unescape","pathname","href","extractProtocol","match","rest","relative","base","path","concat","last","unshift","up","splice","extracted","instruction","index","instructions","charAt","host","hostname","username","password","auth","origin","fn","pop","char","ins","qs","urlParse","parseURL","parsedUrl","search","fullpath","Registry","verbs","GET","PUT","POST","DELETE","PATCH","HEAD","OPTIONS","Hosts","registries","forURL","registry","createPassthrough","fakeXHR","nativeXMLHttpRequest","evts","uploadEvents","lifecycleProps","_passthroughRequest","async","copyLifecycleProperties","propertyNames","fromXHR","toXHR","prop","dispatchEvent","eventable","eventType","event","createHandler","createUploadHandler","upload","timeout","h","requestHeaders","interceptor","ctx","FakeRequest","sendArguments","arguments","pretender","running","apply","checkPassthrough","passthrough","handleRequest","_nativeXMLHttpRequest","_passthroughCheck","args","getResponseHeader","console","warn","Pretender","hosts","lastArg","shouldNotTrack","trackRequests","noopArray","handlers","handledRequests","passthroughRequests","unhandledRequests","requestReferences","forcePassthrough","disableUnhandled","_fetchProps","argLength","verbify","verb","handler","register","scheduleProgressEvent","startTime","totalTime","setTimeout","elapsedTime","Date","getTime","progressTotal","requestBody","size","progressTransmitted","_progress","array","PASSTHROUGH","post","put","patch","head","maps","numberOfCalls","add","recognized","recognize","passthroughRequest","_handlerFor","async_1","pretender_1","_handleRequest_1","statusHeadersAndBody","note","prepareHeaders","prepareBody","handleResponse","respond","handledRequest","resolvedResult","erroredRequest","unhandledRequest","strategy","delay","pretender_2","len","res","requiresManualResolution","matches","params","queryParams","shutdown"],"mappings":"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","sourcesContent":["import RouteRecognizer from 'route-recognizer';\nimport FakeXMLHttpRequest from 'fake-xml-http-request';\n\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob();\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n};\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ];\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name);\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value);\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift();\n      return {done: value === undefined, value: value}\n    }\n  };\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    };\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {};\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value);\n    }, this);\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1]);\n    }, this);\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name]);\n    }, this);\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name);\n  value = normalizeValue(value);\n  var oldValue = this.map[name];\n  this.map[name] = oldValue ? oldValue + ', ' + value : value;\n};\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)];\n};\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name);\n  return this.has(name) ? this.map[name] : null\n};\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n};\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value);\n};\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this);\n    }\n  }\n};\n\nHeaders.prototype.keys = function() {\n  var items = [];\n  this.forEach(function(value, name) {\n    items.push(name);\n  });\n  return iteratorFor(items)\n};\n\nHeaders.prototype.values = function() {\n  var items = [];\n  this.forEach(function(value) {\n    items.push(value);\n  });\n  return iteratorFor(items)\n};\n\nHeaders.prototype.entries = function() {\n  var items = [];\n  this.forEach(function(value, name) {\n    items.push([name, value]);\n  });\n  return iteratorFor(items)\n};\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true;\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result);\n    };\n    reader.onerror = function() {\n      reject(reader.error);\n    };\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsArrayBuffer(blob);\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsText(blob);\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf);\n  var chars = new Array(view.length);\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i]);\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength);\n    view.set(new Uint8Array(buf));\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false;\n\n  this._initBody = function(body) {\n    this._bodyInit = body;\n    if (!body) {\n      this._bodyText = '';\n    } else if (typeof body === 'string') {\n      this._bodyText = body;\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body;\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body;\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString();\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer);\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer]);\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body);\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body);\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8');\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type);\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n      }\n    }\n  };\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    };\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    };\n  }\n\n  this.text = function() {\n    var rejected = consumed(this);\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  };\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    };\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  };\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase();\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  options = options || {};\n  var body = options.body;\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url;\n    this.credentials = input.credentials;\n    if (!options.headers) {\n      this.headers = new Headers(input.headers);\n    }\n    this.method = input.method;\n    this.mode = input.mode;\n    this.signal = input.signal;\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit;\n      input.bodyUsed = true;\n    }\n  } else {\n    this.url = String(input);\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin';\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers);\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET');\n  this.mode = options.mode || this.mode || null;\n  this.signal = options.signal || this.signal;\n  this.referrer = null;\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body);\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n};\n\nfunction decode(body) {\n  var form = new FormData();\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers();\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':');\n    var key = parts.shift().trim();\n    if (key) {\n      var value = parts.join(':').trim();\n      headers.append(key, value);\n    }\n  });\n  return headers\n}\n\nBody.call(Request.prototype);\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {};\n  }\n\n  this.type = 'default';\n  this.status = options.status === undefined ? 200 : options.status;\n  this.ok = this.status >= 200 && this.status < 300;\n  this.statusText = 'statusText' in options ? options.statusText : 'OK';\n  this.headers = new Headers(options.headers);\n  this.url = options.url || '';\n  this._initBody(bodyInit);\n}\n\nBody.call(Response.prototype);\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n};\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''});\n  response.type = 'error';\n  return response\n};\n\nvar redirectStatuses = [301, 302, 303, 307, 308];\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n};\n\nvar DOMException = self.DOMException;\ntry {\n  new DOMException();\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message;\n    this.name = name;\n    var error = Error(message);\n    this.stack = error.stack;\n  };\n  DOMException.prototype = Object.create(Error.prototype);\n  DOMException.prototype.constructor = DOMException;\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init);\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    function abortXhr() {\n      xhr.abort();\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      };\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n      var body = 'response' in xhr ? xhr.response : xhr.responseText;\n      resolve(new Response(body, options));\n    };\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'));\n    };\n\n    xhr.open(request.method, request.url, true);\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true;\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false;\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob';\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value);\n    });\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr);\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr);\n        }\n      };\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n  })\n}\n\nfetch.polyfill = true;\n\nif (!self.fetch) {\n  self.fetch = fetch;\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n}\n\nvar FakeFetch = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Headers: Headers,\n  Request: Request,\n  Response: Response,\n  get DOMException () { return DOMException; },\n  fetch: fetch\n});\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode$1(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode$1(part[1])\n      , value = decode$1(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nvar stringify = querystringify;\nvar parse = querystring;\n\nvar querystringify_1 = {\n\tstringify: stringify,\n\tparse: parse\n};\n\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof commonjsGlobal !== 'undefined') globalVar = commonjsGlobal;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = querystringify_1.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!requiresPort(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || querystringify_1.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!requiresPort(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = querystringify_1.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = querystringify_1;\n\nvar urlParse = Url;\n\n/**\n * parseURL - decompose a URL into its parts\n * @param  {String} url a URL\n * @return {Object} parts of the URL, including the following\n *\n * 'https://www.yahoo.com:1234/mypage?test=yes#abc'\n *\n * {\n *   host: 'www.yahoo.com:1234',\n *   protocol: 'https:',\n *   search: '?test=yes',\n *   hash: '#abc',\n *   href: 'https://www.yahoo.com:1234/mypage?test=yes#abc',\n *   pathname: '/mypage',\n *   fullpath: '/mypage?test=yes'\n * }\n */\nfunction parseURL(url) {\n    var parsedUrl = new urlParse(url);\n    if (!parsedUrl.host) {\n        // eslint-disable-next-line no-self-assign\n        parsedUrl.href = parsedUrl.href; // IE: load the host and protocol\n    }\n    var pathname = parsedUrl.pathname;\n    if (pathname.charAt(0) !== '/') {\n        pathname = '/' + pathname; // IE: prepend leading slash\n    }\n    var host = parsedUrl.host;\n    if (parsedUrl.port === '80' || parsedUrl.port === '443') {\n        host = parsedUrl.hostname; // IE: remove default port\n    }\n    return {\n        host: host,\n        protocol: parsedUrl.protocol,\n        search: parsedUrl.query,\n        hash: parsedUrl.hash,\n        href: parsedUrl.href,\n        pathname: pathname,\n        fullpath: pathname + (parsedUrl.query || '') + (parsedUrl.hash || '')\n    };\n}\n\n/**\n * Registry\n *\n * A registry is a map of HTTP verbs to route recognizers.\n */\nvar Registry = /** @class */ (function () {\n    function Registry( /* host */) {\n        // Herein we keep track of RouteRecognizer instances\n        // keyed by HTTP method. Feel free to add more as needed.\n        this.verbs = {\n            GET: new RouteRecognizer(),\n            PUT: new RouteRecognizer(),\n            POST: new RouteRecognizer(),\n            DELETE: new RouteRecognizer(),\n            PATCH: new RouteRecognizer(),\n            HEAD: new RouteRecognizer(),\n            OPTIONS: new RouteRecognizer()\n        };\n    }\n    return Registry;\n}());\n\n/**\n * Hosts\n *\n * a map of hosts to Registries, ultimately allowing\n * a per-host-and-port, per HTTP verb lookup of RouteRecognizers\n */\nvar Hosts = /** @class */ (function () {\n    function Hosts() {\n        this.registries = {};\n    }\n    /**\n     * Hosts#forURL - retrieve a map of HTTP verbs to RouteRecognizers\n     *                for a given URL\n     *\n     * @param  {String} url a URL\n     * @return {Registry}   a map of HTTP verbs to RouteRecognizers\n     *                      corresponding to the provided URL's\n     *                      hostname and port\n     */\n    Hosts.prototype.forURL = function (url) {\n        var host = parseURL(url).host;\n        var registry = this.registries[host];\n        if (registry === undefined) {\n            registry = (this.registries[host] = new Registry( /*host*/));\n        }\n        return registry.verbs;\n    };\n    return Hosts;\n}());\n\nfunction createPassthrough(fakeXHR, nativeXMLHttpRequest) {\n    // event types to handle on the xhr\n    var evts = ['error', 'timeout', 'abort', 'readystatechange'];\n    // event types to handle on the xhr.upload\n    var uploadEvents = [];\n    // properties to copy from the native xhr to fake xhr\n    var lifecycleProps = [\n        'readyState',\n        'responseText',\n        'response',\n        'responseXML',\n        'responseURL',\n        'status',\n        'statusText',\n    ];\n    var xhr = (fakeXHR._passthroughRequest = new nativeXMLHttpRequest());\n    xhr.open(fakeXHR.method, fakeXHR.url, fakeXHR.async, fakeXHR.username, fakeXHR.password);\n    if (fakeXHR.responseType === 'arraybuffer') {\n        lifecycleProps = ['readyState', 'response', 'status', 'statusText'];\n        xhr.responseType = fakeXHR.responseType;\n    }\n    // use onload if the browser supports it\n    if ('onload' in xhr) {\n        evts.push('load');\n    }\n    // add progress event for async calls\n    // avoid using progress events for sync calls, they will hang https://bugs.webkit.org/show_bug.cgi?id=40996.\n    if (fakeXHR.async && fakeXHR.responseType !== 'arraybuffer') {\n        evts.push('progress');\n        uploadEvents.push('progress');\n    }\n    // update `propertyNames` properties from `fromXHR` to `toXHR`\n    function copyLifecycleProperties(propertyNames, fromXHR, toXHR) {\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            if (prop in fromXHR) {\n                toXHR[prop] = fromXHR[prop];\n            }\n        }\n    }\n    // fire fake event on `eventable`\n    function dispatchEvent(eventable, eventType, event) {\n        eventable.dispatchEvent(event);\n        if (eventable['on' + eventType]) {\n            eventable['on' + eventType](event);\n        }\n    }\n    // set the on- handler on the native xhr for the given eventType\n    function createHandler(eventType) {\n        xhr['on' + eventType] = function (event) {\n            copyLifecycleProperties(lifecycleProps, xhr, fakeXHR);\n            dispatchEvent(fakeXHR, eventType, event);\n        };\n    }\n    // set the on- handler on the native xhr's `upload` property for\n    // the given eventType\n    function createUploadHandler(eventType) {\n        if (xhr.upload && fakeXHR.upload && fakeXHR.upload['on' + eventType]) {\n            xhr.upload['on' + eventType] = function (event) {\n                dispatchEvent(fakeXHR.upload, eventType, event);\n            };\n        }\n    }\n    var i;\n    for (i = 0; i < evts.length; i++) {\n        createHandler(evts[i]);\n    }\n    for (i = 0; i < uploadEvents.length; i++) {\n        createUploadHandler(uploadEvents[i]);\n    }\n    if (fakeXHR.async) {\n        xhr.timeout = fakeXHR.timeout;\n        xhr.withCredentials = fakeXHR.withCredentials;\n    }\n    for (var h in fakeXHR.requestHeaders) {\n        xhr.setRequestHeader(h, fakeXHR.requestHeaders[h]);\n    }\n    return xhr;\n}\n\nfunction interceptor(ctx) {\n    function FakeRequest() {\n        // super()\n        FakeXMLHttpRequest.call(this);\n    }\n    FakeRequest.prototype = Object.create(FakeXMLHttpRequest.prototype);\n    FakeRequest.prototype.constructor = FakeRequest;\n    // extend\n    FakeRequest.prototype.send = function send() {\n        this.sendArguments = arguments;\n        if (!ctx.pretender.running) {\n            throw new Error('You shut down a Pretender instance while there was a pending request. ' +\n                'That request just tried to complete. Check to see if you accidentally shut down ' +\n                'a pretender earlier than you intended to');\n        }\n        FakeXMLHttpRequest.prototype.send.apply(this, arguments);\n        if (ctx.pretender.checkPassthrough(this)) {\n            this.passthrough();\n        }\n        else {\n            ctx.pretender.handleRequest(this);\n        }\n    };\n    FakeRequest.prototype.passthrough = function passthrough() {\n        if (!this.sendArguments) {\n            throw new Error('You attempted to passthrough a FakeRequest that was never sent. ' +\n                'Call `.send()` on the original request first');\n        }\n        var xhr = createPassthrough(this, ctx.pretender._nativeXMLHttpRequest);\n        xhr.send.apply(xhr, this.sendArguments);\n        return xhr;\n    };\n    FakeRequest.prototype._passthroughCheck = function (method, args) {\n        if (this._passthroughRequest) {\n            return this._passthroughRequest[method].apply(this._passthroughRequest, args);\n        }\n        return FakeXMLHttpRequest.prototype[method].apply(this, args);\n    };\n    FakeRequest.prototype.abort = function abort() {\n        return this._passthroughCheck('abort', arguments);\n    };\n    FakeRequest.prototype.getResponseHeader = function getResponseHeader() {\n        return this._passthroughCheck('getResponseHeader', arguments);\n    };\n    FakeRequest.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n        return this._passthroughCheck('getAllResponseHeaders', arguments);\n    };\n    if (ctx.pretender._nativeXMLHttpRequest.prototype._passthroughCheck) {\n        // eslint-disable-next-line no-console\n        console.warn('You created a second Pretender instance while there was already one running. ' +\n            'Running two Pretender servers at once will lead to unexpected results and will ' +\n            'be removed entirely in a future major version.' +\n            'Please call .shutdown() on your instances when you no longer need them to respond.');\n    }\n    return FakeRequest;\n}\n\nfunction Pretender( /* routeMap1, routeMap2, ..., options*/) {\n    this.hosts = new Hosts();\n    var lastArg = arguments[arguments.length - 1];\n    var options = typeof lastArg === 'object' ? lastArg : null;\n    var shouldNotTrack = options && (options.trackRequests === false);\n    var noopArray = { push: function () { }, length: 0 };\n    this.handlers = [];\n    this.handledRequests = shouldNotTrack ? noopArray : [];\n    this.passthroughRequests = shouldNotTrack ? noopArray : [];\n    this.unhandledRequests = shouldNotTrack ? noopArray : [];\n    this.requestReferences = [];\n    this.forcePassthrough = options && (options.forcePassthrough === true);\n    this.disableUnhandled = options && (options.disableUnhandled === true);\n    // reference the native XMLHttpRequest object so\n    // it can be restored later\n    this._nativeXMLHttpRequest = self.XMLHttpRequest;\n    this.running = false;\n    var ctx = { pretender: this };\n    this.ctx = ctx;\n    // capture xhr requests, channeling them into\n    // the route map.\n    self.XMLHttpRequest = interceptor(ctx);\n    // polyfill fetch when xhr is ready\n    this._fetchProps = FakeFetch ? ['fetch', 'Headers', 'Request', 'Response'] : [];\n    this._fetchProps.forEach(function (name) {\n        this['_native' + name] = self[name];\n        self[name] = FakeFetch[name];\n    }, this);\n    // 'start' the server\n    this.running = true;\n    // trigger the route map DSL.\n    var argLength = options ? arguments.length - 1 : arguments.length;\n    for (var i = 0; i < argLength; i++) {\n        this.map(arguments[i]);\n    }\n}\nfunction verbify(verb) {\n    return function (path, handler, async) {\n        return this.register(verb, path, handler, async);\n    };\n}\nfunction scheduleProgressEvent(request, startTime, totalTime) {\n    setTimeout(function () {\n        if (!request.aborted && !request.status) {\n            var elapsedTime = new Date().getTime() - startTime.getTime();\n            var progressTotal = void 0;\n            var body = request.requestBody;\n            if (!body) {\n                progressTotal = 0;\n            }\n            else {\n                // Support Blob, BufferSource, USVString, ArrayBufferView\n                progressTotal = body.byteLength || body.size || body.length || 0;\n            }\n            var progressTransmitted = totalTime <= 0 ? 0 : (elapsedTime / totalTime) * progressTotal;\n            // ProgressEvent expects loaded, total\n            // https://xhr.spec.whatwg.org/#interface-progressevent\n            request.upload._progress(true, progressTransmitted, progressTotal);\n            request._progress(true, progressTransmitted, progressTotal);\n            scheduleProgressEvent(request, startTime, totalTime);\n        }\n    }, 50);\n}\nfunction isArray(array) {\n    return Object.prototype.toString.call(array) === '[object Array]';\n}\nvar PASSTHROUGH = {};\nPretender.prototype = {\n    get: verbify('GET'),\n    post: verbify('POST'),\n    put: verbify('PUT'),\n    'delete': verbify('DELETE'),\n    patch: verbify('PATCH'),\n    head: verbify('HEAD'),\n    options: verbify('OPTIONS'),\n    map: function (maps) {\n        maps.call(this);\n    },\n    register: function register(verb, url, handler, async) {\n        if (!handler) {\n            throw new Error('The function you tried passing to Pretender to handle ' +\n                verb + ' ' + url + ' is undefined or missing.');\n        }\n        handler.numberOfCalls = 0;\n        handler.async = async;\n        this.handlers.push(handler);\n        var registry = this.hosts.forURL(url)[verb];\n        registry.add([{\n                path: parseURL(url).fullpath,\n                handler: handler\n            }]);\n        return handler;\n    },\n    passthrough: PASSTHROUGH,\n    checkPassthrough: function checkPassthrough(request) {\n        var verb = request.method.toUpperCase();\n        var path = parseURL(request.url).fullpath;\n        var recognized = this.hosts.forURL(request.url)[verb].recognize(path);\n        var match = recognized && recognized[0];\n        if ((match && match.handler === PASSTHROUGH) || this.forcePassthrough) {\n            this.passthroughRequests.push(request);\n            this.passthroughRequest(verb, path, request);\n            return true;\n        }\n        return false;\n    },\n    handleRequest: function handleRequest(request) {\n        var verb = request.method.toUpperCase();\n        var path = request.url;\n        var handler = this._handlerFor(verb, path, request);\n        if (handler) {\n            handler.handler.numberOfCalls++;\n            var async_1 = handler.handler.async;\n            this.handledRequests.push(request);\n            var pretender_1 = this;\n            var _handleRequest_1 = function (statusHeadersAndBody) {\n                if (!isArray(statusHeadersAndBody)) {\n                    var note = 'Remember to `return [status, headers, body];` in your route handler.';\n                    throw new Error('Nothing returned by handler for ' + path + '. ' + note);\n                }\n                var status = statusHeadersAndBody[0];\n                var headers = pretender_1.prepareHeaders(statusHeadersAndBody[1]);\n                var body = pretender_1.prepareBody(statusHeadersAndBody[2], headers);\n                pretender_1.handleResponse(request, async_1, function () {\n                    request.respond(status, headers, body);\n                    pretender_1.handledRequest(verb, path, request);\n                });\n            };\n            try {\n                var result = handler.handler(request);\n                if (result && typeof result.then === 'function') {\n                    // `result` is a promise, resolve it\n                    result.then(function (resolvedResult) {\n                        _handleRequest_1(resolvedResult);\n                    });\n                }\n                else {\n                    _handleRequest_1(result);\n                }\n            }\n            catch (error) {\n                this.erroredRequest(verb, path, request, error);\n                this.resolve(request);\n            }\n        }\n        else {\n            if (!this.disableUnhandled) {\n                this.unhandledRequests.push(request);\n                this.unhandledRequest(verb, path, request);\n            }\n        }\n    },\n    handleResponse: function handleResponse(request, strategy, callback) {\n        var delay = typeof strategy === 'function' ? strategy() : strategy;\n        delay = typeof delay === 'boolean' || typeof delay === 'number' ? delay : 0;\n        if (delay === false) {\n            callback();\n        }\n        else {\n            var pretender_2 = this;\n            pretender_2.requestReferences.push({\n                request: request,\n                callback: callback\n            });\n            if (delay !== true) {\n                scheduleProgressEvent(request, new Date(), delay);\n                setTimeout(function () {\n                    pretender_2.resolve(request);\n                }, delay);\n            }\n        }\n    },\n    resolve: function resolve(request) {\n        for (var i = 0, len = this.requestReferences.length; i < len; i++) {\n            var res = this.requestReferences[i];\n            if (res.request === request) {\n                res.callback();\n                this.requestReferences.splice(i, 1);\n                break;\n            }\n        }\n    },\n    requiresManualResolution: function (verb, path) {\n        var handler = this._handlerFor(verb.toUpperCase(), path, {});\n        if (!handler) {\n            return false;\n        }\n        var async = handler.handler.async;\n        return typeof async === 'function' ? async() === true : async === true;\n    },\n    prepareBody: function (body) { return body; },\n    prepareHeaders: function (headers) { return headers; },\n    handledRequest: function ( /* verb, path, request */) { },\n    passthroughRequest: function ( /* verb, path, request */) { },\n    unhandledRequest: function (verb, path /*, request */) {\n        throw new Error('Pretender intercepted ' + verb + ' ' +\n            path + ' but no handler was defined for this type of request');\n    },\n    erroredRequest: function (verb, path, request, error) {\n        error.message = 'Pretender intercepted ' + verb + ' ' +\n            path + ' but encountered an error: ' + error.message;\n        throw error;\n    },\n    _handlerFor: function (verb, url, request) {\n        var registry = this.hosts.forURL(url)[verb];\n        var matches = registry.recognize(parseURL(url).fullpath);\n        var match = matches ? matches[0] : null;\n        if (match) {\n            request.params = match.params;\n            request.queryParams = matches.queryParams;\n        }\n        return match;\n    },\n    shutdown: function shutdown() {\n        self.XMLHttpRequest = this._nativeXMLHttpRequest;\n        this._fetchProps.forEach(function (name) {\n            self[name] = this['_native' + name];\n        }, this);\n        this.ctx.pretender = undefined;\n        // 'stop' the server\n        this.running = false;\n    }\n};\nPretender.parseURL = parseURL;\nPretender.Hosts = Hosts;\nPretender.Registry = Registry;\n\nexport default Pretender;\n"]},"metadata":{},"sourceType":"module"}