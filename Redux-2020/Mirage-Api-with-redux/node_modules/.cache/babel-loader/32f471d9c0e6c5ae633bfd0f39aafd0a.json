{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/GitHub/React-redux/Redux-2020/Mirage-Api-with-redux/src/components/Counter.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increment, decrement, incrementByAmount, counterUpdate } from '../store/CounterSlice';\n\nfunction Counter() {\n  //const [counter, setCounter] = useState(0);\n  const [value, setValue] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    counter,\n    isLoading\n  } = useSelector(state => {\n    console.log(state);\n    return {\n      counter: state.counter.count,\n      isLoading: state.counter.isLoading\n    };\n  });\n  if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 27\n    }\n  }, \"Loading....\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Counter: \", counter), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(increment());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(decrement());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Decrement\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(incrementByAmount(Number(value)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Increment By Value\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(counterUpdate());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Increment From Server\")));\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-redux/Redux-2020/Mirage-Api-with-redux/src/components/Counter.js"],"names":["React","useState","useDispatch","useSelector","increment","decrement","incrementByAmount","counterUpdate","Counter","value","setValue","dispatch","counter","isLoading","state","console","log","count","e","target","Number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,iBAA/B,EAAkDC,aAAlD,QAAuE,uBAAvE;;AACA,SAASC,OAAT,GAAmB;AACf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBV,WAAW,CAAEW,KAAD,IAAW;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AACHF,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,KADpB;AAEHJ,MAAAA,SAAS,EAAEC,KAAK,CAACF,OAAN,CAAcC;AAFtB,KAAP;AAIH,GANyC,CAA1C;AAOA,MAAIA,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACf,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeD,OAAf,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBD,MAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBO,MAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CAFJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGa,CAAD,IAAO;AAChCR,MAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBE,MAAAA,QAAQ,CAACL,iBAAiB,CAACc,MAAM,CAACX,KAAD,CAAP,CAAlB,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,CAXJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBE,MAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CApBJ,CADJ;AA4BH;;AAED,eAAeC,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { increment, decrement, incrementByAmount, counterUpdate } from '../store/CounterSlice';\nfunction Counter() {\n    //const [counter, setCounter] = useState(0);\n    const [value, setValue] = useState(0);\n    const dispatch = useDispatch();\n    const { counter, isLoading } = useSelector((state) => {\n        console.log(state);\n        return {\n            counter: state.counter.count,\n            isLoading: state.counter.isLoading\n        }\n    });\n    if (isLoading) return <div>Loading....</div>\n    return (\n        <div >\n            <div>Counter: {counter}</div>\n            <div>\n                <button onClick={() => {\n                    dispatch(increment());\n                }}>Increment</button>\n                <br />\n                <button onClick={() => {\n                    dispatch(decrement());\n                }}>Decrement</button>\n            </div>\n            <div>\n                <input type=\"text\" onChange={(e) => {\n                    setValue(e.target.value);\n                }} />\n                <br />\n                <button onClick={() => {\n                    dispatch(incrementByAmount(Number(value)))\n                }}>Increment By Value</button>\n            </div>\n            <div>\n                <button onClick={() => {\n                    dispatch(counterUpdate())\n                }}>Increment From Server</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}